name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '(noci)')"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    env:
      python_version: 3.11.0

    steps:
      - uses: actions/checkout@v3

      - name: Install depends
        run: ./scripts/depends.sh

      - name: check depends
        run: |
          ls -lh $HOME/.local/
          ls -lh $HOME/.local/*/
          ls -lh $HOME/.local/*/*/

      - name: Fetch cpython source
        id: fetch-cpython
        run: scripts/fetch.sh $python_version

      - name: Build cpython normally
        run: scripts/build/normal.sh "${{ steps.fetch-cpython.outputs.dest }}"

  build-image:
    name: Build (image)
    runs-on: ubuntu-latest
    # if: "!contains(github.event.head_commit.message, '(noci)')"
    if: false
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - uses: actions/checkout@v3

      - name: Install buildx
        uses: docker/setup-buildx-action@v2
        with:
          config: .github/buildkit.toml
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build (image)
        uses: docker/build-push-action@v3
        with:
          context: images/base
          pull: true
          push: true
          tags: ${{ steps.imagename.outputs.name }}:latest
          cache-to: type=registry,mode=max,ref=${{ steps.imagename.outputs.name }}:cache
          cache-from: type=registry,ref=${{ steps.imagename.outputs.name }}:cache
